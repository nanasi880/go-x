// Code generated by "stringer -type=FormatName -output=format_name_string.go"; DO NOT EDIT.

package msgpack

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PositiveFixInt-0]
	_ = x[FixMap-128]
	_ = x[FixArray-144]
	_ = x[FixStr-160]
	_ = x[Nil-192]
	_ = x[Unused-193]
	_ = x[False-194]
	_ = x[True-195]
	_ = x[Bin8-196]
	_ = x[Bin16-197]
	_ = x[Bin32-198]
	_ = x[Ext8-199]
	_ = x[Ext16-200]
	_ = x[Ext32-201]
	_ = x[Float32-202]
	_ = x[Float64-203]
	_ = x[Uint8-204]
	_ = x[Uint16-205]
	_ = x[Uint32-206]
	_ = x[Uint64-207]
	_ = x[Int8-208]
	_ = x[Int16-209]
	_ = x[Int32-210]
	_ = x[Int64-211]
	_ = x[FixExt1-212]
	_ = x[FixExt2-213]
	_ = x[FixExt4-214]
	_ = x[FixExt8-215]
	_ = x[FixExt16-216]
	_ = x[Str8-217]
	_ = x[Str16-218]
	_ = x[Str32-219]
	_ = x[Array16-220]
	_ = x[Array32-221]
	_ = x[Map16-222]
	_ = x[Map32-223]
	_ = x[NegativeFixInt-224]
}

const (
	_FormatName_name_0 = "PositiveFixInt"
	_FormatName_name_1 = "FixMap"
	_FormatName_name_2 = "FixArray"
	_FormatName_name_3 = "FixStr"
	_FormatName_name_4 = "NilUnusedFalseTrueBin8Bin16Bin32Ext8Ext16Ext32Float32Float64Uint8Uint16Uint32Uint64Int8Int16Int32Int64FixExt1FixExt2FixExt4FixExt8FixExt16Str8Str16Str32Array16Array32Map16Map32NegativeFixInt"
)

var (
	_FormatName_index_4 = [...]uint8{0, 3, 9, 14, 18, 22, 27, 32, 36, 41, 46, 53, 60, 65, 71, 77, 83, 87, 92, 97, 102, 109, 116, 123, 130, 138, 142, 147, 152, 159, 166, 171, 176, 190}
)

func (i FormatName) String() string {
	switch {
	case i == 0:
		return _FormatName_name_0
	case i == 128:
		return _FormatName_name_1
	case i == 144:
		return _FormatName_name_2
	case i == 160:
		return _FormatName_name_3
	case 192 <= i && i <= 224:
		i -= 192
		return _FormatName_name_4[_FormatName_index_4[i]:_FormatName_index_4[i+1]]
	default:
		return "FormatName(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
